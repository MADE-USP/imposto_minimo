"Rendimento Tributável",
"Base de Cálculo",
"Aluguel",
"Previdência Oficial",
"Previdência RRA",
"Previdência Privada",
"Dependentes",
"Instrução",
"Despesas Médicas",
"Pensão Alimentícia",
"Livro-Caixa",
"Imóveis",
"Móveis",
"Financeiros",
"Outros Bens e Direitos",
"13º salário",
"Rendimentos de Aplicações Financeiras",
"Ganhos de Capital na Alienação de Bens/Direitos",
"Participação nos Lucros ou Resultados",
"Rendimentos Recebidos Acumuladamente",
"Ganhos Líquidos em Renda Variável",
"Juros sobre Capital Próprio",
"Outros",
"Rendimentos Sujeitos à Tributação Exclusiva",
"Imposto Devido",
"Lucros e Dividendos",
"Rendim. Sócio/Titular ME/EPP Opt SIMPLES",
"Transf. Patrimoniais doações e heranças",
"Parcela isenta de aposentadoria etc",
"Parcela isenta da Atividade Rural",
"Pensão, proventos de aposentadoria etc",
"Indenização por Rescisão do Contrato de Trabalho etc",
"Rendimentos de Caderneta de Poupança etc",
"Incorporação de Reservas de Capital/Bonificações em Ações",
"Outros Rendimentos Isentos",
"Dívida"
)
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
#receita_2022$`Rendimento Tributável` <- receita_2022$`Rendimento Tributável` %>% replace_na(0)
####código para criar grupos de acordo com tamanho
##ordena pnadc por todos os rendimentos e separa apenas o vetor de pesos
pnadc_adultos_com_renda_2022 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_adultos_com_renda_2022
v <- pnadc_adultos_com_renda_2022$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 3842 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_adultos_com_renda_2022,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 11 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/3842
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_milesimo <- pnadc_receita %>% filter(!is.na(`Renda Total`))
individuos_na_receita <- pnadc_receita_milesimo$id_ind
pnadc_merge2 <- pnadc_adultos_com_renda_2022 %>% filter(!id_ind %in% individuos_na_receita)
gc()
# 2ª Parte
receita_2022 <- read.csv("Dados - IRPF - Novo Segundo Recorte.csv")
#colnames(receita_2022) <- c("Centésimo", "Quantidade de Declarantes","Renda Total","Rendimento Tributável","Base de Cálculo","Total de Despesas Dedutíveis", "Despesas Médicas", "Instrução", "Imóveis","Móveis","Financeiros", "Outros Bens e Direitos")
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
pnadc_merge2 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_merge2
v <- pnadc_merge2$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 38417 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_merge2,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 10 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/38417
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_centesimo <- pnadc_receita %>% filter(!is.na(`Renda Total`))
individuos_na_receita <- append(individuos_na_receita,pnadc_receita_centesimo$id_ind)
pnadc_merge3 <- pnadc_adultos_com_renda_2022 %>% filter(!id_ind %in% individuos_na_receita)
gc()
# 3ª Parte
receita_2022 <- read.csv("Dados - IRPF - Novas Colunas.csv")
#colnames(receita_2022) <- c("Centésimo", "Quantidade de Declarantes","Renda Total","Rendimento Tributável","Base de Cálculo","Total de Despesas Dedutíveis", "Despesas Médicas", "Instrução", "Imóveis","Móveis","Financeiros", "Outros Bens e Direitos")
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
receita_2022 <- receita_2022 %>% filter(Centésimo <100)
receita_2022$`Lucros e Dividendos` <- as.numeric(receita_2022$`Lucros e Dividendos`)
#receita_2022$`Rendimento Tributável` <- receita_2022$`Rendimento Tributável` %>% replace_na(0)
####código para criar grupos de acordo com tamanho
##ordena pnadc por todos os rendimentos e separa apenas o vetor de pesos
pnadc_merge3 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_merge3
v <- pnadc_merge3$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 384168 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_merge3,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 100 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/384168
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_final <- bind_rows(pnadc_receita_milesimo,pnadc_receita_centesimo, pnadc_receita)
save(pnadc_receita_final, file = "baseCompleta.Rda")
gc()
gc()
options(scipen = 999)
#rm(list=ls())
library(tidyverse)
#library(haven) ##le arquivos DTA
library(dlookr) ## Ajuda na limpeza da base
#library(PNADcIBGE) #ajuda na leitura dos microdados da PNADC
#library(deflateBR) #função para deflacionar séries
library(Hmisc)
library(writexl) #exporta tabelas em formato excel
#library(openxlsx)
library(readxl)
library(hutils)
setwd('D:/Imputacao - RF - PNAD')
##################################################
####     JUNTA BASE RECEITA  COM PNADC        ####
##################################################
load("pnadc_adultos_com_renda_2022_5")
receita_2022 <- read.csv("Dados - IRPF - Novo Primeiro Recorte.csv")
#colnames(receita_2022) <- c("Centésimo", "Quantidade de Declarantes","Renda Total","Rendimento Tributável","Base de Cálculo","Total de Despesas Dedutíveis", "Despesas Médicas", "Instrução", "Imóveis","Móveis","Financeiros", "Outros Bens e Direitos")
column_names <- c(
"Centésimo",
"Quantidade de Declarantes",
"Renda Total",
"Rendimento Tributável",
"Base de Cálculo",
"Aluguel",
"Previdência Oficial",
"Previdência RRA",
"Previdência Privada",
"Dependentes",
"Instrução",
"Despesas Médicas",
"Pensão Alimentícia",
"Livro-Caixa",
"Imóveis",
"Móveis",
"Financeiros",
"Outros Bens e Direitos",
"13º salário",
"Rendimentos de Aplicações Financeiras",
"Ganhos de Capital na Alienação de Bens/Direitos",
"Participação nos Lucros ou Resultados",
"Rendimentos Recebidos Acumuladamente",
"Ganhos Líquidos em Renda Variável",
"Juros sobre Capital Próprio",
"Outros",
"Rendimentos Sujeitos à Tributação Exclusiva",
"Imposto Devido",
"Lucros e Dividendos",
"Rendim. Sócio/Titular ME/EPP Opt SIMPLES",
"Transf. Patrimoniais doações e heranças",
"Parcela isenta de aposentadoria etc",
"Parcela isenta da Atividade Rural",
"Pensão, proventos de aposentadoria etc",
"Indenização por Rescisão do Contrato de Trabalho etc",
"Rendimentos de Caderneta de Poupança etc",
"Incorporação de Reservas de Capital/Bonificações em Ações",
"Outros Rendimentos Isentos",
"Dívida"
)
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
#receita_2022$`Rendimento Tributável` <- receita_2022$`Rendimento Tributável` %>% replace_na(0)
####código para criar grupos de acordo com tamanho
##ordena pnadc por todos os rendimentos e separa apenas o vetor de pesos
pnadc_adultos_com_renda_2022 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_adultos_com_renda_2022
v <- pnadc_adultos_com_renda_2022$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 3842 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_adultos_com_renda_2022,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 11 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/3842
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_milesimo <- pnadc_receita %>% filter(!is.na(`Renda Total`))
individuos_na_receita <- pnadc_receita_milesimo$id_ind
pnadc_merge2 <- pnadc_adultos_com_renda_2022 %>% filter(!id_ind %in% individuos_na_receita)
gc()
# 2ª Parte
receita_2022 <- read.csv("Dados - IRPF - Novo Segundo Recorte.csv")
#colnames(receita_2022) <- c("Centésimo", "Quantidade de Declarantes","Renda Total","Rendimento Tributável","Base de Cálculo","Total de Despesas Dedutíveis", "Despesas Médicas", "Instrução", "Imóveis","Móveis","Financeiros", "Outros Bens e Direitos")
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
pnadc_merge2 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_merge2
v <- pnadc_merge2$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 38417 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_merge2,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 10 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/38417
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_centesimo <- pnadc_receita %>% filter(!is.na(`Renda Total`))
individuos_na_receita <- append(individuos_na_receita,pnadc_receita_centesimo$id_ind)
pnadc_merge3 <- pnadc_adultos_com_renda_2022 %>% filter(!id_ind %in% individuos_na_receita)
gc()
# 3ª Parte
receita_2022 <- read.csv("Dados - IRPF - Novas Colunas.csv")
#colnames(receita_2022) <- c("Centésimo", "Quantidade de Declarantes","Renda Total","Rendimento Tributável","Base de Cálculo","Total de Despesas Dedutíveis", "Despesas Médicas", "Instrução", "Imóveis","Móveis","Financeiros", "Outros Bens e Direitos")
colnames(receita_2022) <- column_names
receita_2022 <- receita_2022 %>% filter(!is.na(Centésimo))
receita_2022 <- receita_2022 %>% filter(Centésimo <100)
receita_2022$`Lucros e Dividendos` <- as.numeric(receita_2022$`Lucros e Dividendos`)
#receita_2022$`Rendimento Tributável` <- receita_2022$`Rendimento Tributável` %>% replace_na(0)
####código para criar grupos de acordo com tamanho
##ordena pnadc por todos os rendimentos e separa apenas o vetor de pesos
pnadc_merge3 %>%
arrange(desc(rendimento_todasfontes)) -> pnadc_merge3
v <- pnadc_merge3$peso_dom_comcalib
grupo <- 1 # Primeiro grupo
tg <- 384168 # Meta de tamanho p cada grupo
ref <- 1 # Ponto inicial do primeiro grupo: sempre 1
output <- c()
#v <- sort(v) # Variável de entrada tem que estar ordenada
for(i in 1:length(v)){
if(sum(v[ref:i]) <= tg){
} else {
grupo <- grupo + 1
ref <- i + 1}
output[i] <- grupo
}
##junta vetor indicando grupos (percentis em linha com receita)
#será que eu deveria filtrar base da PNADC apenas para quem paga algum imposto? (renda do trabalho acima da linha de isenção)
bind_cols(pnadc_merge3,
output) %>%
rename(grupo = `...341`) %>%
mutate(
populacao_acumulada = cumsum(peso_dom_comcalib),
grupo_receita = 100 - grupo
) -> pnadc_para_juntar_receita
pnadc_receita <- full_join(pnadc_para_juntar_receita, receita_2022,
by = c("grupo_receita" = "Centésimo"), keep=TRUE)
####calibrando informações da pnadc a partir da base da receita
mensaliza_e_individualiza <- function(var){
(var/12)/384168
}
pnadc_receita %>%
group_by(grupo_receita) %>%
mutate(
renda_anual_todasfontes_centesimo = sum(rendimento_todasfontes*peso_dom_comcalib)*12,
fator_expansão = `Renda Total`/renda_anual_todasfontes_centesimo,
rendimento_todasfontes_calibrado = if_else(fator_expansão >= 1, rendimento_todasfontes*fator_expansão,
rendimento_todasfontes),
across(.cols = c(`Renda Total`:`Dívida`),
.fns = mensaliza_e_individualiza)
) %>%
rename(peso_comcalib = peso_dom_comcalib) %>%
select(id_ind, peso_comcalib, UF, urbano_ou_rural, idade, renda_habitual_trabprincipal, #faixa_etaria,
rendimento_todasfontes, renda_bpc, renda_pbf, renda_aposentadoria,
renda_segurodesemprego, renda_outrosprogramas, renda_aluguel,
renda_outrosrendimentos, tem_renda_trabalho, rendimento_todasfontes_calibrado,
anos_estudo, branco, homem, Centésimo, grupo_receita, fator_expansão,
elegível_isencao:posicao_elegível_isencao_dupla_mais_desconto_simplificado,
`Renda Total`:`Dívida`) %>%
ungroup() -> pnadc_receita
pnadc_receita <- pnadc_receita %>% mutate(rendimento_todasfontes_calibrado = coalesce(rendimento_todasfontes_calibrado, rendimento_todasfontes))
pnadc_receita_final <- bind_rows(pnadc_receita_milesimo,pnadc_receita_centesimo, pnadc_receita)
save(pnadc_receita_final, file = "baseRendimentosIsentos.Rda")
View(pnadc_receita_final)
gc()
options(scipen = 999)
gc()
library(tidyverse)
library(this.path)
setwd(this.dir())
load('../data/baseRendimentosIsentos.Rda')
rendaMaxima99 <- pnadc_receita_final %>% filter(Centésimo == 99) %>% pull(rendimento_todasfontes_calibrado) %>% max()
pnadc_receita_final <- pnadc_receita_final %>% mutate(centesimoReceita = if_else(rendimento_todasfontes_calibrado>rendaMaxima99, 100, Centésimo))
gc()
options(scipen = 999)
gc()
library(tidyverse)
library(this.path)
setwd(this.dir())
load('../data/baseRendimentosIsentos.Rda')
pnadc_receita_final <- pnadc_receita_final %>% mutate(Centésimo = as.integer(Centésimo))
rendaMaxima99 <- pnadc_receita_final %>% filter(Centésimo == 99) %>% pull(rendimento_todasfontes_calibrado) %>% max()
pnadc_receita_final <- pnadc_receita_final %>% mutate(centesimoReceita = if_else(rendimento_todasfontes_calibrado>rendaMaxima99, 100, Centésimo))
typeof(100)
integer(100)
as.integer(100)
gc()
gc()
options(scipen = 999)
gc()
library(tidyverse)
library(this.path)
setwd(this.dir())
load('../data/baseRendimentosIsentos.Rda')
rendaMaxima99 <- pnadc_receita_final %>% filter(Centésimo == 99) %>% pull(rendimento_todasfontes_calibrado) %>% max()
pnadc_receita_final <- pnadc_receita_final %>% mutate(centesimoReceita = if_else(rendimento_todasfontes_calibrado>rendaMaxima99, as.integer(100), Centésimo))
pnadc_receita_final <- pnadc_receita_final %>% mutate(`Participação nos Lucros ou Resultados` = replace_na(`Participação nos Lucros ou Resultados`,0))
pnadc_receita_final <- pnadc_receita_final %>% group_by(centesimoReceita) %>% mutate(TotalPlr = sum(`Participação nos Lucros ou Resultados`)) %>% ungroup()
metaGrupo <- 384168/8
pnad_ordenada <- pnadc_receita_final %>% filter(!is.na(centesimoReceita)) %>% group_by(centesimoReceita) %>%
arrange(desc(rendimento_todasfontes_calibrado), .by_group = TRUE) %>%
mutate(
peso_acumulado = cumsum(peso_comcalib)
) %>% ungroup()
pnad_ricos_centesimo <- pnad_ordenada %>%
group_by(centesimoReceita) %>%
filter(peso_acumulado <= metaGrupo) %>%
ungroup()
pnad_ricos_centesimo <- pnad_ricos_centesimo %>% group_by(centesimoReceita) %>% mutate(plr_distribuido = TotalPlr/n()) %>% ungroup()
pnad_ricos_centesimo <- pnad_ricos_centesimo %>% select(c(id_ind, plr_distribuido))
pnadc_receita_final <- pnadc_receita_final %>% left_join(pnad_ricos_centesimo, by="id_ind")
pnadc_receita_final <- pnadc_receita_final %>% mutate(plr_distribuido = replace_na(plr_distribuido,0))
rb8 <- readRDS('../data/colunasRB8.Rds')
rb8 <- rb8 %>% select(c("id_ind", "RB8"))
pnadc_receita_final <- pnadc_receita_final %>% left_join(rb8, by = "id_ind")
save(pnadc_receita_final, file = "../data/baseRendimentosIsentosPlrAdj.Rda")
